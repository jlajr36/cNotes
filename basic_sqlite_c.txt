#include <stdio.h>
#include "sqlite3.c"  // Ensure you have sqlite3.c in your project directory

int main() {
    sqlite3 *db;
    char *errMsg = 0;
    int rc;

    // Open an in-memory database
    rc = sqlite3_open(":memory:", &db);
    if (rc) {
        fprintf(stderr, "Can't open database: %s\n", sqlite3_errmsg(db));
        return rc;
    } else {
        fprintf(stdout, "Opened database successfully\n");
    }

    // Create a SQL statement
    const char *sql = "CREATE TABLE users (id INTEGER PRIMARY KEY, name TEXT);"
                      "INSERT INTO users (name) VALUES ('Alice');"
                      "INSERT INTO users (name) VALUES ('Bob');";

    // Execute SQL statement
    rc = sqlite3_exec(db, sql, 0, 0, &errMsg);
    if (rc != SQLITE_OK) {
        fprintf(stderr, "SQL error: %s\n", errMsg);
        sqlite3_free(errMsg);
    } else {
        fprintf(stdout, "Table created and data inserted successfully\n");
    }

    // Query the data
    const char *query = "SELECT * FROM users;";
    sqlite3_stmt *stmt;

    rc = sqlite3_prepare_v2(db, query, -1, &stmt, 0);
    if (rc != SQLITE_OK) {
        fprintf(stderr, "Failed to prepare statement: %s\n", sqlite3_errmsg(db));
    } else {
        // Execute the statement and print the results
        while (sqlite3_step(stmt) == SQLITE_ROW) {
            int id = sqlite3_column_int(stmt, 0);
            const char *name = (const char *)sqlite3_column_text(stmt, 1);
            printf("ID: %d, Name: %s\n", id, name);
        }
    }

    // Finalize the statement
    sqlite3_finalize(stmt);

    // Close the database connection
    sqlite3_close(db);
    return 0;  // Return success
}
