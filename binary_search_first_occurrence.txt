#include <iostream>
#include <vector>

using namespace std;

int binary_search(const vector<int>& vec, int target) {
    int low = 0, high = vec.size() - 1;
    int result = -1;

    while (low <= high) {
        int mid = low + (high - low) / 2;
        if (vec[mid] == target) {
            result = mid;
            high = mid - 1; // search left side
        } else if (vec[mid] < target) {
            low = mid + 1;
        } else {
            high = mid - 1;
        }
    }

    return result;
}

int main()
{
    vector<int> arr1 = {1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29,
                       31, 33, 35, 37, 39, 41, 43, 45, 47, 49, 51, 53,
                       55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77,
                       79, 81, 83, 85, 87, 89, 91, 93, 95, 97, 99};
    int target1 = 23;
    int pos1 = binary_search(arr1, target1);
    cout << "Pos1: " << pos1 << endl; //11

    vector<int> arr2 = {5, 10, 15, 23, 42, 55};
    int target2 = 23;
    int pos2 = binary_search(arr2, target2);
    cout << "Pos2: " << pos2 << endl; //3

    vector<int> arr3 = {1, 2, 4, 4, 4, 5};
    int target3 = 4;
    int pos3 = binary_search(arr3, target3);
    cout << "Pos3: " << pos3 << endl; //2

    vector<int> arr4 = {1, 3, 5, 7, 9};
    int target4 = 99;
    int pos4 = binary_search(arr4, target4);
    cout << "Pos4: " << pos4 << endl; //-1

    vector<int> arr5 = {};
    int target5 = 5;
    int pos5 = binary_search(arr5, target5);
    cout << "Pos5: " << pos5 << endl; //-1

    return 0;
}
